name: Flask CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  sonar-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONARTOKEN }}
        SONAR_HOST_URL: http://149.130.185.180:9000
      with:
        args: >
          -Dsonar.projectKey=flask-app
          -Dsonar.sources=.
          -Dsonar.python.version=3.10

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: sonar-scan   # Only run if SonarQube analysis job passes

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        IMAGE=mariuslita/flask-app:${{ github.sha }}
        echo "IMAGE=$IMAGE" >> $GITHUB_ENV
        docker build -t $IMAGE .
        docker push $IMAGE

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.32.1'   # match your OKE cluster version

    - name: Configure kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

    - name: Deploy to Kubernetes (OKE)
      run: |
        kubectl set image deployment/flask-app flask-app=$IMAGE
        kubectl rollout status deployment/flask-app

